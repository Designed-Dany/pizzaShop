import React from "react";

import qs from "qs";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import Categories from "../components/Categories";
import Pagination from "../components/Pagination";
import Pizza from "../components/Pizza";
import Skeleton from "../components/Pizza/Skeleton";
import Sort, { list } from "../components/Sort";
import {
	selectFilter,
	setCategoryId,
	setCurrentPage,
	setFilters,
} from "../redux/slices/filterSlice";
import { fetchPizzas, selectPizzaData } from "../redux/slices/pizzasSlice";

const Home: React.FC = () => {
	const navigation = useNavigate();
	const dispatch = useDispatch();
	const isSearch = React.useRef(false);
	const isMounted = React.useRef(false);

	const { items, status } = useSelector(selectPizzaData);
	const { categoryId, sort, currentPage, searchValue } =
		useSelector(selectFilter);
	const sortType = sort.sortProperty;

	const onChangeCategory = (id: number) => {
		dispatch(setCategoryId(id));
	};

	const onChangePage = (page: number) => {
		dispatch(setCurrentPage(page));
	};

	// —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –ø–∏—Ü—Ü
	const getPizzas = () => {
		const order = sortType.includes("-") ? "asc" : "desc"; // –µ—Å–ª–∏ –≤ –≤—ã–±–æ—Ä–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –µ—Å—Ç—å –º–∏–Ω—É—Å,
		// —Ç–æ–≥–¥–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö, –∞ –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –Ω–∞–æ–±–æ—Ä–æ—Ç.
		const sortBy = sortType.replace("-", ""); // —É–¥–∞–ª–∏—Ç—å –º–∏–Ω—É—Å –∏–∑ –≤—ã–±–æ—Ä–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
		const category = categoryId > 0 ? `category=${categoryId}` : ""; // –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫–æ—Ç–æ—Ä—É—é –º—ã –≤—ã–±—Ä–∞–ª–∏ –±–æ–ª—å—à–µ "–í—Å–µ –ø–∏—Ü—Ü—ã",
		//—Ç–æ–≥–¥–∞ –≤—Å—Ç–∞–≤—å —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
		const search = searchValue ? `&search=${searchValue}` : ""; // –µ—Å–ª–∏ –≤ –ø–æ–∏—Å–∫–µ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç —Ç–æ–≥–¥–∞ –≤—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ—á–∫—É –≤ –∑–∞–ø—Ä–æ—Å, –∏–Ω–∞—á–µ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞


		dispatch(
			// @ts-ignore
			fetchPizzas({
				order,
				sortBy,
				category,
				search,
				currentPage,
			})
		);
	};

	// –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ isMounted false –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å,
	// —Ç–æ –æ–Ω –Ω–µ –≤—à—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, —Ç–æ –æ–Ω –¥–µ–ª–∞–µ—Ç isMounted = true –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—à—ã—Ç–∏–µ,
	// —Ç–∞–∫–∂–µ —Å –ø–æ–º–æ—â—å—é navigation –≤—à—ã–≤–∞–µ–º –∑–Ω–∞–∫ –≤–æ–ø—Ä–æ—Å–∞ –≤ —Å—Å—ã–ª–∫—É, –∏–Ω–∞—á–µ –±–µ–∑ –Ω–µ–µ –æ–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.
	React.useEffect(() => {
		if (isMounted.current) {
			// –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å—Ç—Ä–æ—á–∫—É, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –≤—à—ã—Ç—å –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
			const queryString = qs.stringify({
				sortProperty: sort.sortProperty,
				categoryId,
				currentPage,
			});

			navigation(`?${queryString}`); // —Å –ø–æ–º–æ—â—å—é —Ö—É–∫–∞ navigation
			//–≤—à—ã–≤–∞–µ–º —Å—Ç—Ä–æ—á–∫—É –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—ä–µ–∫—Ç–∞ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
		}
		isMounted.current = true;
	}, [categoryId, sortType, currentPage]);

	React.useEffect(() => {
		if (window.location.search) {
			const params = qs.parse(window.location.search.substring(1)); // –ø–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ª–∞–µ–º –∏–∑ —Å—Ç—Ä–æ—á–∫–∏ –æ–±—ä–µ–∫—Ç

			const sort = list.find((obj) => obj.sortProperty === params.sortProperty);

			dispatch(
				setFilters({
					...params,
					sort,
				})
			);
			isSearch.current = true;
			// –µ—Å–ª–∏ –º—ã –Ω–µ –¥–µ–ª–∞–µ–º –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, isSearch.current = true,
			// —Ç–æ–≥–¥–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –¥–µ–ª–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –ø–∏—Ü—Ü
		}
	}, []);

	React.useEffect(() => {
		getPizzas();
	}, [categoryId, sortType, searchValue, currentPage]);

	const pizzas = items.map((obj: any) => <Pizza key={obj.id} {...obj} />);
	const skeletons = [...new Array(6)].map((_, index) => (
		<Skeleton key={index} />
	));

	return (
		<div className="container">
			<div className="content__top">
				<Categories value={categoryId} onChangeCategory={onChangeCategory} />
				<Sort />
			</div>
			<h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
			{status === "error" ? (
				<div>
					<div>
						<h2>
							–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ <span>üòï</span>
						</h2>
						<p>
							–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Ü—Ü—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.
						</p>
					</div>
				</div>
			) : (
				<div className="content__items">
					{status === "loading" ? skeletons : pizzas}
				</div>
			)}
			<Pagination currentPage={currentPage} onChangePage={onChangePage} />
		</div>
	);
};

export default Home;
